"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = require("debug");
class DebugLoggerImpl {
    constructor(namespace, additionalContext) {
        this.setupLogs(namespace);
        this.additionalContextFn = additionalContext;
    }
    debug(message, ...context) {
        this.logWrapper('debug', message, context);
    }
    error(message, ...context) {
        this.logWrapper('error', message, context);
    }
    info(message, ...context) {
        this.logWrapper('info', message, context);
    }
    warn(message, ...context) {
        this.logWrapper('warn', message, context);
    }
    setupLogs(namespace) {
        this.loggers = {
            debug: debug_1.debug(`${namespace}:debug`),
            info: debug_1.debug(`${namespace}:info`),
            warn: debug_1.debug(`${namespace}:warn`),
            error: debug_1.debug(`${namespace}:error`)
        };
        Object.keys(this.loggers).forEach(key => {
            const item = this.loggers[key];
            item.log = console.log.bind(console);
        });
    }
    logWrapper(level, message, context) {
        if (this.additionalContextFn) {
            const loggingContext = this.additionalContextFn();
            if (loggingContext) {
                context.push(loggingContext);
            }
        }
        this.loggers[level].apply(null, [message].concat(context));
    }
}
const logger = new DebugLoggerImpl(process.env.APP_NAME || 'sfcc-product-search-proxy');
function getLogger() {
    return logger;
}
exports.getLogger = getLogger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWctbG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGVidWctbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsaUNBQThCO0FBUzlCLE1BQU0sZUFBZTtJQUluQixZQUFZLFNBQWlCLEVBQUUsaUJBQTRCO1FBQ3pELElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLGlCQUFpQixDQUFDO0lBQy9DLENBQUM7SUFFTSxLQUFLLENBQUMsT0FBZSxFQUFFLEdBQUcsT0FBYztRQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFlLEVBQUUsR0FBRyxPQUFjO1FBQzdDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sSUFBSSxDQUFDLE9BQWUsRUFBRSxHQUFHLE9BQWM7UUFDNUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFTSxJQUFJLENBQUMsT0FBZSxFQUFFLEdBQUcsT0FBYztRQUM1QyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVPLFNBQVMsQ0FBQyxTQUFpQjtRQUVqQyxJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ2IsS0FBSyxFQUFFLGFBQUssQ0FBQyxHQUFJLFNBQVUsUUFBUSxDQUFDO1lBQ3BDLElBQUksRUFBRSxhQUFLLENBQUMsR0FBSSxTQUFVLE9BQU8sQ0FBQztZQUNsQyxJQUFJLEVBQUUsYUFBSyxDQUFDLEdBQUksU0FBVSxPQUFPLENBQUM7WUFDbEMsS0FBSyxFQUFFLGFBQUssQ0FBQyxHQUFJLFNBQVUsUUFBUSxDQUFDO1NBQ3JDLENBQUM7UUFFRixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDdEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxHQUFHLENBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLFVBQVUsQ0FBQyxLQUEwQixFQUFFLE9BQWUsRUFBRSxPQUFjO1FBQzVFLElBQUksSUFBSSxDQUFDLG1CQUFtQixFQUFFO1lBQzVCLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1lBQ2xELElBQUksY0FBYyxFQUFFO2dCQUNsQixPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2FBQzlCO1NBQ0Y7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFFLEtBQUssQ0FBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBRSxPQUFPLENBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUNqRSxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLGVBQWUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDO0FBRXhGLFNBQWdCLFNBQVM7SUFDdkIsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUZELDhCQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWdMb2dnZXIgfSBmcm9tICcuL2RlYnVnLWxvZ2dlci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgZGVidWcgfSBmcm9tICdkZWJ1Zyc7XG5cbmludGVyZmFjZSBTdXBwb3J0TGV2ZWxzIHtcbiAgZGVidWc6IGRlYnVnLklEZWJ1Z2dlcjtcbiAgaW5mbzogZGVidWcuSURlYnVnZ2VyO1xuICB3YXJuOiBkZWJ1Zy5JRGVidWdnZXI7XG4gIGVycm9yOiBkZWJ1Zy5JRGVidWdnZXI7XG59XG5cbmNsYXNzIERlYnVnTG9nZ2VySW1wbCBpbXBsZW1lbnRzIERlYnVnTG9nZ2VyIHtcbiAgcHJpdmF0ZSBsb2dnZXJzOiBTdXBwb3J0TGV2ZWxzO1xuICBwcml2YXRlIGFkZGl0aW9uYWxDb250ZXh0Rm4/OiAoKSA9PiB7fTtcblxuICBjb25zdHJ1Y3RvcihuYW1lc3BhY2U6IHN0cmluZywgYWRkaXRpb25hbENvbnRleHQ/OiAoKSA9PiB7fSkge1xuICAgIHRoaXMuc2V0dXBMb2dzKG5hbWVzcGFjZSk7XG4gICAgdGhpcy5hZGRpdGlvbmFsQ29udGV4dEZuID0gYWRkaXRpb25hbENvbnRleHQ7XG4gIH1cblxuICBwdWJsaWMgZGVidWcobWVzc2FnZTogc3RyaW5nLCAuLi5jb250ZXh0OiBhbnlbXSkge1xuICAgIHRoaXMubG9nV3JhcHBlcignZGVidWcnLCBtZXNzYWdlLCBjb250ZXh0KTtcbiAgfVxuXG4gIHB1YmxpYyBlcnJvcihtZXNzYWdlOiBzdHJpbmcsIC4uLmNvbnRleHQ6IGFueVtdKSB7XG4gICAgdGhpcy5sb2dXcmFwcGVyKCdlcnJvcicsIG1lc3NhZ2UsIGNvbnRleHQpO1xuICB9XG5cbiAgcHVibGljIGluZm8obWVzc2FnZTogc3RyaW5nLCAuLi5jb250ZXh0OiBhbnlbXSkge1xuICAgIHRoaXMubG9nV3JhcHBlcignaW5mbycsIG1lc3NhZ2UsIGNvbnRleHQpO1xuICB9XG5cbiAgcHVibGljIHdhcm4obWVzc2FnZTogc3RyaW5nLCAuLi5jb250ZXh0OiBhbnlbXSkge1xuICAgIHRoaXMubG9nV3JhcHBlcignd2FybicsIG1lc3NhZ2UsIGNvbnRleHQpO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXR1cExvZ3MobmFtZXNwYWNlOiBzdHJpbmcpIHtcblxuICAgIHRoaXMubG9nZ2VycyA9IHtcbiAgICAgIGRlYnVnOiBkZWJ1ZyhgJHsgbmFtZXNwYWNlIH06ZGVidWdgKSxcbiAgICAgIGluZm86IGRlYnVnKGAkeyBuYW1lc3BhY2UgfTppbmZvYCksXG4gICAgICB3YXJuOiBkZWJ1ZyhgJHsgbmFtZXNwYWNlIH06d2FybmApLFxuICAgICAgZXJyb3I6IGRlYnVnKGAkeyBuYW1lc3BhY2UgfTplcnJvcmApXG4gICAgfTtcblxuICAgIE9iamVjdC5rZXlzKHRoaXMubG9nZ2VycykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMubG9nZ2Vyc1sga2V5IF07XG4gICAgICBpdGVtLmxvZyA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGxvZ1dyYXBwZXIobGV2ZWw6IGtleW9mIFN1cHBvcnRMZXZlbHMsIG1lc3NhZ2U6IHN0cmluZywgY29udGV4dDogYW55W10pIHtcbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ29udGV4dEZuKSB7XG4gICAgICBjb25zdCBsb2dnaW5nQ29udGV4dCA9IHRoaXMuYWRkaXRpb25hbENvbnRleHRGbigpO1xuICAgICAgaWYgKGxvZ2dpbmdDb250ZXh0KSB7XG4gICAgICAgIGNvbnRleHQucHVzaChsb2dnaW5nQ29udGV4dCk7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMubG9nZ2Vyc1sgbGV2ZWwgXS5hcHBseShudWxsLCBbIG1lc3NhZ2UgXS5jb25jYXQoY29udGV4dCkpO1xuICB9XG59XG5cbmNvbnN0IGxvZ2dlciA9IG5ldyBEZWJ1Z0xvZ2dlckltcGwocHJvY2Vzcy5lbnYuQVBQX05BTUUgfHwgJ3NmY2MtcHJvZHVjdC1zZWFyY2gtcHJveHknKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldExvZ2dlcigpOiBEZWJ1Z0xvZ2dlciB7XG4gIHJldHVybiBsb2dnZXI7XG59XG4iXX0=